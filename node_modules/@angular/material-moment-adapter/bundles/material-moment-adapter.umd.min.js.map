{"version":3,"sources":["src/material-moment-adapter/material-moment-adapter.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialMomentAdapter","core","material","tslib","moment","this","core$1","_rollupMoment","MAT_MOMENT_DATE_ADAPTER_OPTIONS","InjectionToken","providedIn","MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY","useUtc","range","length","valueFunction","valuesArray","Array","i","MomentDateAdapter","_super","dateLocale","_options","_this","call","setLocale","locale","__extends","prototype","momentLocaleData","localeData","_localeData","firstDayOfWeek","longMonths","months","shortMonths","monthsShort","dates","createDate","format","longDaysOfWeek","weekdays","shortDaysOfWeek","weekdaysShort","narrowDaysOfWeek","weekdaysMin","getYear","date","clone","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","getDateNames","getDayOfWeekNames","getYearName","getFirstDayOfWeek","getNumDaysInMonth","daysInMonth","Error","result","_createMoment","isValid","today","parse","value","parseFormat","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","toIso8601","deserialize","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","_a","strict","utc","decorators","type","Injectable","ctorParameters","String","Optional","Inject","args","MAT_DATE_LOCALE","undefined","DateAdapter","MAT_MOMENT_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateModule","NgModule","providers","provide","useClass","deps","Éµ0","MatMomentDateModule","imports","MAT_DATE_FORMATS","useValue","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/core'), require('tslib'), require('moment')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-moment-adapter', ['exports', '@angular/core', '@angular/material/core', 'tslib', 'moment'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialMomentAdapter = {}), global.ng.core, global.ng.material.core, global.tslib, global.moment));\n}(this, (function (exports, core, core$1, tslib, _rollupMoment) { 'use strict';\n\n    var _rollupMoment__default = 'default' in _rollupMoment ? _rollupMoment['default'] : _rollupMoment;\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var moment = _rollupMoment__default || _rollupMoment;\n    /** InjectionToken for moment date adapter to configure options. */\n    var MAT_MOMENT_DATE_ADAPTER_OPTIONS = new core.InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n    /** @docs-private */\n    function MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n        return {\n            useUtc: false\n        };\n    }\n    /** Creates an array and fills it with values. */\n    function range(length, valueFunction) {\n        var valuesArray = Array(length);\n        for (var i = 0; i < length; i++) {\n            valuesArray[i] = valueFunction(i);\n        }\n        return valuesArray;\n    }\n    /** Adapts Moment.js Dates for use with Angular Material. */\n    var MomentDateAdapter = /** @class */ (function (_super) {\n        tslib.__extends(MomentDateAdapter, _super);\n        function MomentDateAdapter(dateLocale, _options) {\n            var _this = _super.call(this) || this;\n            _this._options = _options;\n            _this.setLocale(dateLocale || moment.locale());\n            return _this;\n        }\n        MomentDateAdapter.prototype.setLocale = function (locale) {\n            var _this = this;\n            _super.prototype.setLocale.call(this, locale);\n            var momentLocaleData = moment.localeData(locale);\n            this._localeData = {\n                firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n                longMonths: momentLocaleData.months(),\n                shortMonths: momentLocaleData.monthsShort(),\n                dates: range(31, function (i) { return _this.createDate(2017, 0, i + 1).format('D'); }),\n                longDaysOfWeek: momentLocaleData.weekdays(),\n                shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n                narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n            };\n        };\n        MomentDateAdapter.prototype.getYear = function (date) {\n            return this.clone(date).year();\n        };\n        MomentDateAdapter.prototype.getMonth = function (date) {\n            return this.clone(date).month();\n        };\n        MomentDateAdapter.prototype.getDate = function (date) {\n            return this.clone(date).date();\n        };\n        MomentDateAdapter.prototype.getDayOfWeek = function (date) {\n            return this.clone(date).day();\n        };\n        MomentDateAdapter.prototype.getMonthNames = function (style) {\n            // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n            return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n        };\n        MomentDateAdapter.prototype.getDateNames = function () {\n            return this._localeData.dates;\n        };\n        MomentDateAdapter.prototype.getDayOfWeekNames = function (style) {\n            if (style == 'long') {\n                return this._localeData.longDaysOfWeek;\n            }\n            if (style == 'short') {\n                return this._localeData.shortDaysOfWeek;\n            }\n            return this._localeData.narrowDaysOfWeek;\n        };\n        MomentDateAdapter.prototype.getYearName = function (date) {\n            return this.clone(date).format('YYYY');\n        };\n        MomentDateAdapter.prototype.getFirstDayOfWeek = function () {\n            return this._localeData.firstDayOfWeek;\n        };\n        MomentDateAdapter.prototype.getNumDaysInMonth = function (date) {\n            return this.clone(date).daysInMonth();\n        };\n        MomentDateAdapter.prototype.clone = function (date) {\n            return date.clone().locale(this.locale);\n        };\n        MomentDateAdapter.prototype.createDate = function (year, month, date) {\n            // Moment.js will create an invalid date if any of the components are out of bounds, but we\n            // explicitly check each case so we can throw more descriptive errors.\n            if (month < 0 || month > 11) {\n                throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n            }\n            if (date < 1) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n            }\n            var result = this._createMoment({ year: year, month: month, date: date }).locale(this.locale);\n            // If the result isn't valid, the date must have been out of bounds for this month.\n            if (!result.isValid()) {\n                throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n            }\n            return result;\n        };\n        MomentDateAdapter.prototype.today = function () {\n            return this._createMoment().locale(this.locale);\n        };\n        MomentDateAdapter.prototype.parse = function (value, parseFormat) {\n            if (value && typeof value == 'string') {\n                return this._createMoment(value, parseFormat, this.locale);\n            }\n            return value ? this._createMoment(value).locale(this.locale) : null;\n        };\n        MomentDateAdapter.prototype.format = function (date, displayFormat) {\n            date = this.clone(date);\n            if (!this.isValid(date)) {\n                throw Error('MomentDateAdapter: Cannot format invalid date.');\n            }\n            return date.format(displayFormat);\n        };\n        MomentDateAdapter.prototype.addCalendarYears = function (date, years) {\n            return this.clone(date).add({ years: years });\n        };\n        MomentDateAdapter.prototype.addCalendarMonths = function (date, months) {\n            return this.clone(date).add({ months: months });\n        };\n        MomentDateAdapter.prototype.addCalendarDays = function (date, days) {\n            return this.clone(date).add({ days: days });\n        };\n        MomentDateAdapter.prototype.toIso8601 = function (date) {\n            return this.clone(date).format();\n        };\n        /**\n         * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n         * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n         * string into null. Returns an invalid date for all other values.\n         */\n        MomentDateAdapter.prototype.deserialize = function (value) {\n            var date;\n            if (value instanceof Date) {\n                date = this._createMoment(value).locale(this.locale);\n            }\n            else if (this.isDateInstance(value)) {\n                // Note: assumes that cloning also sets the correct locale.\n                return this.clone(value);\n            }\n            if (typeof value === 'string') {\n                if (!value) {\n                    return null;\n                }\n                date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n            }\n            if (date && this.isValid(date)) {\n                return this._createMoment(date).locale(this.locale);\n            }\n            return _super.prototype.deserialize.call(this, value);\n        };\n        MomentDateAdapter.prototype.isDateInstance = function (obj) {\n            return moment.isMoment(obj);\n        };\n        MomentDateAdapter.prototype.isValid = function (date) {\n            return this.clone(date).isValid();\n        };\n        MomentDateAdapter.prototype.invalid = function () {\n            return moment.invalid();\n        };\n        /** Creates a Moment instance while respecting the current UTC settings. */\n        MomentDateAdapter.prototype._createMoment = function (date, format, locale) {\n            var _a = this._options || {}, strict = _a.strict, useUtc = _a.useUtc;\n            return useUtc\n                ? moment.utc(date, format, locale, strict)\n                : moment(date, format, locale, strict);\n        };\n        MomentDateAdapter.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        MomentDateAdapter.ctorParameters = function () { return [\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [core$1.MAT_DATE_LOCALE,] }] },\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n        ]; };\n        return MomentDateAdapter;\n    }(core$1.DateAdapter));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MAT_MOMENT_DATE_FORMATS = {\n        parse: {\n            dateInput: 'l',\n        },\n        display: {\n            dateInput: 'l',\n            monthYearLabel: 'MMM YYYY',\n            dateA11yLabel: 'LL',\n            monthYearA11yLabel: 'MMMM YYYY',\n        },\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MomentDateModule = /** @class */ (function () {\n        function MomentDateModule() {\n        }\n        MomentDateModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            {\n                                provide: core$1.DateAdapter,\n                                useClass: MomentDateAdapter,\n                                deps: [core$1.MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                            }\n                        ],\n                    },] }\n        ];\n        return MomentDateModule;\n    }());\n    var Éµ0 = MAT_MOMENT_DATE_FORMATS;\n    var MatMomentDateModule = /** @class */ (function () {\n        function MatMomentDateModule() {\n        }\n        MatMomentDateModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [MomentDateModule],\n                        providers: [{ provide: core$1.MAT_DATE_FORMATS, useValue: Éµ0 }],\n                    },] }\n        ];\n        return MatMomentDateModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_MOMENT_DATE_ADAPTER_OPTIONS = MAT_MOMENT_DATE_ADAPTER_OPTIONS;\n    exports.MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY = MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY;\n    exports.MAT_MOMENT_DATE_FORMATS = MAT_MOMENT_DATE_FORMATS;\n    exports.MatMomentDateModule = MatMomentDateModule;\n    exports.MomentDateAdapter = MomentDateAdapter;\n    exports.MomentDateModule = MomentDateModule;\n    exports.Éµ0 = Éµ0;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-moment-adapter.umd.js.map\n"]}